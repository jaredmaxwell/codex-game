name: Build Game

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Build with Visual Studio and vcpkg
      run: |
        # Install vcpkg
        git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
        C:\vcpkg\bootstrap-vcpkg.bat
        
        # Install SDL2 dependencies
        C:\vcpkg\vcpkg.exe install sdl2:x64-windows sdl2-ttf:x64-windows sdl2-image:x64-windows
        
        # Find Visual Studio and build
        for /f "usebackq tokens=*" %%i in (`"%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath`) do set VS_PATH=%%i
        call "%VS_PATH%\VC\Auxiliary\Build\vcvars64.bat" && cl /std:c++17 /I"C:\vcpkg\installed\x64-windows\include" src\main.cpp /link "C:\vcpkg\installed\x64-windows\lib\SDL2.lib" "C:\vcpkg\installed\x64-windows\lib\SDL2main.lib" "C:\vcpkg\installed\x64-windows\lib\SDL2_ttf.lib" "C:\vcpkg\installed\x64-windows\lib\SDL2_image.lib" /out:game.exe
        
    - name: Upload Windows build
      uses: actions/upload-artifact@v4
      with:
        name: game-windows
        path: game.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install SDL2 dependencies
      run: |
        brew install sdl2 sdl2_ttf sdl2_image pkg-config
        
    - name: Debug SDL2 paths
      run: |
        echo "Homebrew prefix: $(brew --prefix)"
        echo "SDL2 include path: $(brew --prefix sdl2)/include"
        echo "SDL2_ttf include path: $(brew --prefix sdl2_ttf)/include"
        echo "SDL2_image include path: $(brew --prefix sdl2_image)/include"
        find $(brew --prefix) -name "SDL.h" 2>/dev/null || echo "SDL.h not found"
        find $(brew --prefix) -name "SDL_ttf.h" 2>/dev/null || echo "SDL_ttf.h not found"
        find $(brew --prefix) -name "SDL_image.h" 2>/dev/null || echo "SDL_image.h not found"
        
    - name: Build for macOS
      run: |
        make -f Makefile.macos
        
    - name: Upload macOS build
      uses: actions/upload-artifact@v4
      with:
        name: game-macos
        path: game

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install SDL2 dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends libsdl2-dev libsdl2-ttf-dev libsdl2-image-dev
        
    - name: Build for Linux
      run: |
        make -f Makefile.linux
        
    - name: Upload Linux build
      uses: actions/upload-artifact@v4
      with:
        name: game-linux
        path: game

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
    - name: Download Windows build
      uses: actions/download-artifact@v4
      with:
        name: game-windows
        path: ./releases/windows/
        
    - name: Download macOS build
      uses: actions/download-artifact@v4
      with:
        name: game-macos
        path: ./releases/macos/
        
    - name: Download Linux build
      uses: actions/download-artifact@v4
      with:
        name: game-linux
        path: ./releases/linux/
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Codex Game v${{ github.run_number }}
        body: |
          ## Codex Game Release v${{ github.run_number }}
          
          Cross-platform builds for Windows, macOS, and Linux.
          
          ### Downloads:
          - **Windows**: `game.exe` - Run directly on Windows
          - **macOS**: `game` - Run directly on macOS
          - **Linux**: `game` - Run directly on Linux
          
          ### Controls:
          - **WASD**: Move player
          - **Space**: Attack
          - **ESC**: Quit
          
          ### Game Features:
          - Dynamic enemy spawning and leveling
          - Shard collection system
          - Magnet power-ups
          - Cross-platform compatibility
        files: |
          ./releases/windows/game.exe
          ./releases/macos/game
          ./releases/linux/game
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
