# macOS Makefile
CXX = clang++
HOMEBREW_PREFIX = $(shell brew --prefix)
CXXFLAGS = -std=c++17 -I$(HOMEBREW_PREFIX)/include/SDL2 -I$(HOMEBREW_PREFIX)/include
SRC = src/main.cpp src/bitmap_font.cpp

# Default to dynamic linking with bundling (more reliable than static)
STATIC ?= 0

ifeq ($(STATIC), 1)
    # Static linking - embeds SDL2 into the executable (experimental)
    LDFLAGS = -L$(HOMEBREW_PREFIX)/lib $(HOMEBREW_PREFIX)/lib/libSDL2.a $(HOMEBREW_PREFIX)/lib/libSDL2_image.a -framework Cocoa -framework IOKit -framework CoreVideo -framework CoreAudio -framework AudioToolbox -framework ForceFeedback -framework CoreFoundation -framework Security -framework GameController -framework Metal -framework MetalKit -framework QuartzCore -framework ImageIO -framework CoreGraphics -framework CoreServices -framework ApplicationServices -framework Carbon -framework OpenGL -framework IOKit -framework CoreFoundation -framework Security -framework SystemConfiguration -framework Foundation -framework AppKit -framework CoreServices -framework ApplicationServices -framework Carbon -framework OpenGL -framework IOKit -framework CoreFoundation -framework Security -framework SystemConfiguration -framework Foundation -framework AppKit
    TARGET = game
    MESSAGE = "Building with static SDL2 linking (experimental - may have issues)"
else
    # Dynamic linking with bundling - copies dylib files and fixes paths
    LDFLAGS = -L$(HOMEBREW_PREFIX)/lib -lSDL2 -lSDL2_image -framework Cocoa
    TARGET = game
    MESSAGE = "Building with dynamic SDL2 linking and bundling (recommended)"
endif

all: $(TARGET)

$(TARGET): $(SRC)
	@echo $(MESSAGE)
ifeq ($(STATIC), 1)
	@echo "Checking for static SDL2 libraries..."
	@test -f $(HOMEBREW_PREFIX)/lib/libSDL2.a || (echo "Error: libSDL2.a not found. Install with: brew install sdl2" && exit 1)
	@test -f $(HOMEBREW_PREFIX)/lib/libSDL2_image.a || (echo "Error: libSDL2_image.a not found. Install with: brew install sdl2_image" && exit 1)
	@echo "Static libraries found, linking..."
	$(CXX) $(CXXFLAGS) -o $@ $(SRC) $(LDFLAGS)
else
	@echo "Building with dynamic linking..."
	$(CXX) $(CXXFLAGS) -o $@ $(SRC) $(LDFLAGS)
	@echo "Bundling SDL2 libraries..."
	@cp $(HOMEBREW_PREFIX)/lib/libSDL2*.dylib . 2>/dev/null || echo "No SDL2 dylib files to copy"
	@echo "Fixing library paths in executable..."
	@for dylib in libSDL2*.dylib; do \
		if [ -f "$$dylib" ]; then \
			install_name_tool -change $(HOMEBREW_PREFIX)/lib/$$dylib @executable_path/$$dylib $@; \
			echo "Fixed path for $$dylib"; \
		fi; \
	done
	@echo "Dynamic linking with bundling complete!"
endif

static:
	@$(MAKE) STATIC=1

dynamic:
	@$(MAKE) STATIC=0

clean:
	rm -f game libSDL2*.dylib

.PHONY: all static dynamic clean
